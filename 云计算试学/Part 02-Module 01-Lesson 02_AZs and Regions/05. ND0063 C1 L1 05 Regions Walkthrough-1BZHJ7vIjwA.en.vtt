WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.820
AWS region is a geographically separated portion of the AWS global infrastructure.

00:00:05.820 --> 00:00:09.165
This geographic separation can help your platform

00:00:09.165 --> 00:00:12.585
continue to operate through a wide array of conditions,

00:00:12.585 --> 00:00:16.544
including major internet disruptions or natural disasters.

00:00:16.544 --> 00:00:20.455
Each region is separated from the others by hundreds of miles.

00:00:20.455 --> 00:00:24.655
They are isolated so that they are not interdependent,

00:00:24.655 --> 00:00:27.710
but they are connected by a global high-speed,

00:00:27.710 --> 00:00:31.115
high bandwidth private AWS network.

00:00:31.115 --> 00:00:34.970
Regions are also highly useful when dealing with personal,

00:00:34.970 --> 00:00:36.740
health, or financial data,

00:00:36.740 --> 00:00:38.875
where local governments may have

00:00:38.875 --> 00:00:44.365
data locality laws requiring that citizen data is not stored in other countries.

00:00:44.365 --> 00:00:48.560
Today, there are more than 20 regions spread around the world

00:00:48.560 --> 00:00:54.265
and terabits or multiple terabits of bandwidth between regions.

00:00:54.265 --> 00:00:59.435
AWS has a global private fiber network with redundant paths.

00:00:59.435 --> 00:01:02.815
AWS has complete control over this network.

00:01:02.815 --> 00:01:07.235
Creating applications that run actively in multiple regions at the same time,

00:01:07.235 --> 00:01:11.965
provides for global redundancy and fast delivery to local users.

00:01:11.965 --> 00:01:16.520
An active multi-region application has data and services

00:01:16.520 --> 00:01:21.365
spread throughout the world and can be resilient to most types of service interruption.

00:01:21.365 --> 00:01:24.995
A well-constructed multi-region application is,

00:01:24.995 --> 00:01:27.495
pick a catchphrase, world-class,

00:01:27.495 --> 00:01:29.870
enterprise grade, industrial strength.

00:01:29.870 --> 00:01:34.460
You have access on AWS to build the highest tier of reliable,

00:01:34.460 --> 00:01:36.665
available, and resilient platforms.

00:01:36.665 --> 00:01:39.695
Before Public Clouds, this level of performance

00:01:39.695 --> 00:01:43.315
was only available to multi-billion dollar companies.

00:01:43.315 --> 00:01:46.560
Running in multiple regions is completely optional.

00:01:46.560 --> 00:01:49.895
In fact, if you don't intentionally try to,

00:01:49.895 --> 00:01:52.025
you'll only be running in one region.

00:01:52.025 --> 00:01:56.780
Most AWS services must be managed on a per region basis.

00:01:56.780 --> 00:01:59.570
When you create resources in one region,

00:01:59.570 --> 00:02:01.910
it does not exist in the other regions.

00:02:01.910 --> 00:02:04.115
There are a few exceptions to this,

00:02:04.115 --> 00:02:05.765
and they are the AWS,

00:02:05.765 --> 00:02:08.929
global services such as IAM,

00:02:08.929 --> 00:02:13.700
where identity and access management must span the entirety of AWS.

00:02:13.700 --> 00:02:16.865
Another example is Cloudfront,

00:02:16.865 --> 00:02:21.020
where the primary goal of the service is to distribute data globally.

00:02:21.020 --> 00:02:24.365
S3 is also a global service,

00:02:24.365 --> 00:02:28.190
and that every region is displayed at once in the AWS console,

00:02:28.190 --> 00:02:32.285
but an S3 bucket still lives in a single region.

00:02:32.285 --> 00:02:34.760
One reason for this is that there is

00:02:34.760 --> 00:02:38.345
typically some amount of additional costs to run a multiple regions.

00:02:38.345 --> 00:02:42.730
You must determine if your use case warrants the cost and complexity.

00:02:42.730 --> 00:02:45.165
As AWS build services,

00:02:45.165 --> 00:02:48.140
they generally released them at first to only some

00:02:48.140 --> 00:02:51.710
regions.This allows AWS to slowly bring

00:02:51.710 --> 00:02:54.470
some users onto a service.This is

00:02:54.470 --> 00:02:58.820
another example of how AWS regions are managed independently.

00:02:58.820 --> 00:03:01.820
Make sure that a service is available and all

00:03:01.820 --> 00:03:05.140
of the regions you utilize before adopting that service.

00:03:05.140 --> 00:03:09.500
Database console shows you which region you're currently working in,

00:03:09.500 --> 00:03:11.450
in the upper right-hand corner.

00:03:11.450 --> 00:03:18.380
You also need to specify a region when you work with the AWS CLI or an AWS SDK,

00:03:18.380 --> 00:03:21.860
if you find yourself suddenly missing several resources,

00:03:21.860 --> 00:03:24.410
make sure you're looking at the correct region.

00:03:24.410 --> 00:03:29.970
On occasion, the AWS counsel can accidentally switch regions on you.

