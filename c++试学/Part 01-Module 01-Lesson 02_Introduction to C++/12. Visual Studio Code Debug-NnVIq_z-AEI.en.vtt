WEBVTT
Kind: captions
Language: en

00:00:00.230 --> 00:00:04.320
So here, we have a slightly more complex program.
在这里 我们有一个稍微复杂的程序 

00:00:04.320 --> 00:00:10.574
This program declares a vector of strings called brothers.
此程序声明了一个称为兄弟的字符串的向量 

00:00:10.574 --> 00:00:14.519
This is my brothers David, Ethan, and Adam.
这是我的兄弟大卫伊森和亚当

00:00:14.519 --> 00:00:20.625
Then we iterate over this vector and output the name of each of the brothers.
然后我们迭代这个向量 输出每个兄弟的名字 

00:00:20.625 --> 00:00:24.769
If we run this,
如果我们这样

00:00:24.769 --> 00:00:33.144
let me make sure I'm in the right directory, g++ hello.cpp./a.out.
让我确保我在正确的目录 g++ hello.cpp./a.out 

00:00:33.145 --> 00:00:36.190
So we say hello to David, Ethan, and Adam.
所以我们跟大卫 伊森和亚当打个招呼

00:00:36.189 --> 00:00:39.919
What I would like to do now is try and debug this program,
我现在想做的是尝试调试这个程序 

00:00:39.920 --> 00:00:42.530
just to inspect what's going on on each line.
来检查每一条线路上发生的情况

00:00:42.530 --> 00:00:47.545
So you might think I could come up here and start debugging, but in fact,
所以你可能觉得我可以上来开始调试

00:00:47.545 --> 00:00:50.240
Visual Studio Code is only set up out of the box to debug
Visual Studio 代码仅设置在框外进行调试

00:00:50.240 --> 00:00:54.484
Node.js which is not helpful for us as C++ developers.
作为 C++ 开发者  Node.js 对我们没有帮助 

00:00:54.484 --> 00:00:59.015
So I'm going to come to the extensions directory and search for
所以我要到扩展目录搜索

00:00:59.015 --> 00:01:04.094
C++ and I see the Microsoft C++ extension which is what I want to install.
C++ 和我看到了 Microsoft C++ 扩展 这是我想要安装的 

00:01:04.094 --> 00:01:06.049
So now I've installed that.
现在我已经安装好了

00:01:06.049 --> 00:01:11.504
I'm going to come back to hello.cpp and I'm going to try and debug again.
我将返回 hello.cpp  我将再次尝试调试 

00:01:11.504 --> 00:01:15.399
Now I'm able to debug C++.
现在我可以调试 C++ 

00:01:15.709 --> 00:01:23.030
When I start debugging I get nothing.
当我开始调试时 我一无所获 

00:01:23.030 --> 00:01:30.530
Let's try coming to the debug option here and select my environment.
让我们来尝试这里的调试选项 选择我的环境 

00:01:30.530 --> 00:01:32.945
Nothing happens.
什么都没发生

00:01:32.944 --> 00:01:36.559
Here in the bottom right corner I see an error.
在右下角我看到一个错误 

00:01:36.560 --> 00:01:42.350
Please first open a folder to do advanced debug configuration.
请首先打开文件夹以执行高级调试配置 

00:01:42.349 --> 00:01:46.189
So I'm going to actually have to put hello.cpp in its own folder.
所以我要把 hello.cpp 放在自己的文件夹里

00:01:46.189 --> 00:01:47.819
So let's open a folder.
让我们打开一个文件夹 

00:01:47.819 --> 00:01:51.919
I'm going to create a new folder within my temp directory called Hello.
我要在我的临时目录中创建一个名为 Hello的新文件夹 

00:01:51.920 --> 00:01:55.790
Then I'm going to click okay.
那我就去点击好了 

00:01:55.790 --> 00:01:59.420
Now I have this blank folder called Hello.
现在我有一个空白文件夹叫做 Hello.

00:01:59.420 --> 00:02:01.594
I'm going to move
我要搬家了

00:02:01.594 --> 00:02:10.729
my hello.cpp file which was in the temp directory into this temp Hello directory.
位于 temp 目录中的 temp 目录中的 hello.cpp 文件 

00:02:10.729 --> 00:02:13.834
So now I see I have hello.cpp all over again.
现在我看到我又有个 hello.cpp 了 

00:02:13.835 --> 00:02:20.064
Let's try just compiling it and running it here to make sure everything still works.
让我们试着整理一下 在这里运行 以确保一切仍然有效 

00:02:20.064 --> 00:02:23.104
All right. Now let's try debugging it.
好吧好吧 现在让我们尝试调试它 

00:02:23.104 --> 00:02:25.489
Let's say we want to stop at this breakpoint.
让我们说 我们想在这个断点停止 

00:02:25.490 --> 00:02:26.800
That's how we set a breakpoint,
这就是我们设置断点的方式

00:02:26.800 --> 00:02:30.355
is we put this red dot here.
我们把这个红点放在这里

00:02:30.354 --> 00:02:33.814
Next to the editor on the line that we want to stop the debugger at,
在编辑器旁边 我们要停止调试器 

00:02:33.814 --> 00:02:35.854
we're going to say start debugging.
我们会说开始调试

00:02:35.854 --> 00:02:41.989
Now I get this option for all the different types of debugging configurations.
现在 我为所有不同类型的调试配置获取此选项 

00:02:41.990 --> 00:02:48.165
I'm going to choose g++ build and debug active file.
我将选择 g++ 构建和调试活动文件 

00:02:48.164 --> 00:02:53.209
Actually I'm going to come over here and add a configuration here,
实际上我要在这里加一个配置

00:02:53.210 --> 00:02:57.000
g++ build and debug active file.
g++ 构建和调试活动文件 

00:02:57.650 --> 00:03:07.200
So let's say I want to debug a.out.
所以说我想调试 a.out  

00:03:07.199 --> 00:03:16.000
Let's create
创建

00:03:16.000 --> 00:03:18.145
a launch configuration.
启动配置 

00:03:18.145 --> 00:03:25.969
Let's delete this and now let's debug.
让我们删除这个 现在让我们调试 

00:03:30.840 --> 00:03:36.819
Let's see. Now we have to load our symbols.
让我们看看 现在我们要加载我们的符号

00:03:36.819 --> 00:03:41.919
So it's not enough to just compile the file and build a.out.
因此 仅仅编译文件和构建 a.out 是不够的 

00:03:41.919 --> 00:03:44.409
We need to compile the file with the debug symbols.
我们需要使用调试符号来编译文件 

00:03:44.409 --> 00:03:53.264
So we'll say hello.-g and we will run on that.
那我们就打个招呼

00:03:53.264 --> 00:03:55.259
Now you see we stop at
现在你看到我们在

00:03:55.259 --> 00:04:00.409
standard cout hello brother and we can look at the status of the program.
标准的 cout hello brother  我们可以查看程序的状态 

00:04:00.409 --> 00:04:02.780
We have these strings that are my brothers,
我们有这些兄弟

00:04:02.780 --> 00:04:04.534
the active brother is David.
活弟就是大卫

00:04:04.534 --> 00:04:07.389
If we continue to the next breakpoint,
如果我们继续下一个断点

00:04:07.389 --> 00:04:10.625
we see the active brother becomes Ethan.
我们看到活哥变成伊森了

00:04:10.625 --> 00:04:14.349
We can just step through the code to add them.
我们可以通过代码来添加它们 

00:04:14.349 --> 00:04:18.959
Now we're done. That's an example of how to debug a program.
现在我们完成了 这是一个如何调试程序的示例 
